{"version":3,"sources":["utils/API.js","containers/Home/Home.jsx","components/Search/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Home","useState","employee","setEmployee","useEffect","API","then","results","console","log","data","className","class","scope","onClick","event","sortedEmployees","sort","a","b","name","first","map","src","picture","thumbnail","last","email","cell","styles","form","paddingTop","margin","float","marginTop","position","Search","handleInputChange","style","type","placeholder","aria-label","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAEe,EACQ,WACf,OAAOA,IAAMC,IAAI,0CCuDVC,EAvDF,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACVC,EADU,KACAC,EADA,KAEjBC,qBAAU,WACRC,IAAwBC,MAAK,SAACC,GAC5BC,QAAQC,IAAI,gBAAiBF,EAAQG,MACrCP,EAAYI,EAAQG,KAAKH,cAE1B,IAUH,OACE,qCACE,qBAAKI,UAAU,SAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAMA,UAAU,KAAhB,oCAGJ,qBAAKA,UAAU,YAAf,SAEE,wBAAOC,MAAM,QAAb,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,SAAgB,wBAAQC,QArBb,SAACC,GACtB,IACMC,EADY,YAAOd,GACYe,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEE,KAAKC,MAAQF,EAAEC,KAAKC,MAAQ,GAAK,KACvFlB,EAAYa,IAkBc,0BAChB,oBAAIH,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBAGJ,gCACGX,EAASoB,KAAI,SAACpB,GAAD,OACZ,+BACE,6BACE,qBAAKqB,IAAKrB,EAASsB,QAAQC,cAE7B,6BAAKvB,EAASkB,KAAKC,QACnB,6BAAKnB,EAASkB,KAAKM,OACnB,6BAAKxB,EAASyB,QACd,6BAAKzB,EAAS0B,SAPP1B,EAAS0B,oBCzC1BC,EAAS,CACXC,KAAM,CACFC,WAAY,GACZC,OAAQ,GACRC,MAAO,QACPC,UAAW,GACXC,SAAU,aA+BHC,MA1Bf,YAAsC,IAApBC,EAAmB,EAAnBA,kBAKd,OAJA7B,QAAQC,IAAI4B,GAKR,mCACA,qBAAKC,MAAOT,EAAOC,KAAnB,SACI,sBAAMnB,UAAU,cAAhB,SAEI,uBACAA,UAAU,uBACV4B,KAAK,SACLC,YAAY,SACZC,aAAW,SAEXH,MAAOT,EAAOC,cCZfY,MAVf,WACE,OACE,eAAC,IAAD,CAAQC,SAAS,IAAjB,UACE,cAAC,EAAD,IACF,cAAC,EAAD,QCEWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.88944194.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    getRandomEmployee: function(){\n        return axios.get(\"https://randomuser.me/api/?results=50\")\n    }\n};\n","import React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/API\";\n\n\nconst Home = () => {\n  const [employee, setEmployee] = useState([]);\n  useEffect(() => {\n    API.getRandomEmployee().then((results) => {\n      console.log(\"results.data:\", results.data);\n      setEmployee(results.data.results);\n    });\n  }, []);\n\n  const handleSortName = (event) => {\n    const sortEmployee = [...employee];\n    const sortedEmployees = sortEmployee.sort((a,b) => (a.name.first > b.name.first ? 1 : -1))\n    setEmployee(sortedEmployees);\n  };\n\n \n\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"container\">\n          <span className=\"h1\">Employee Directory</span>\n        </div>\n      </nav>\n      <div className=\"container\">\n        {/* <div className=\"row\"> */}\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Image</th>\n              <th scope=\"col\"><button onClick={handleSortName}>First Name</button></th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Cell</th>\n            </tr>\n          </thead>\n          <tbody>\n            {employee.map((employee) => (\n              <tr key={employee.cell}>\n                <td>\n                  <img src={employee.picture.thumbnail} />\n                </td>\n                <td>{employee.name.first}</td>\n                <td>{employee.name.last}</td>\n                <td>{employee.email}</td>\n                <td>{employee.cell}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {/* </div> */}\n      </div>\n    </>\n  );\n};\nexport default Home;\n","\nconst styles = {\n    form: {\n        paddingTop: 20,\n        margin: 30,\n        float: \"right\",\n        marginTop: 10,\n        position: \"relative\",\n      \n    }\n}\n\nfunction Search ({handleInputChange}){\n    console.log(handleInputChange)\n// const context = useContext(DataAreaContext)\n\n\n    return(\n        <>\n        <div style={styles.form}>\n            <form className=\"form-inline\"> \n                \n                <input  \n                className=\"form-control mr-sm-2\"\n                type=\"Search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                // onChange={this.handleInputChange} \n                style={styles.form}\n                >\n\n                </input>\n            </form>\n        </div>\n        </>\n    )\n}\n\nexport default Search;","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./containers/Home/Home\";\nimport Search from \"./components/Search/Search\";\n\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Search/>\n    <Home />\n   \n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}